#!/bin/bash
set -e
assert_jenkins

#################################################
## Environment variables

## BLDTYPE: The type of civibuild site to create (e.g. `drupal-clean` or `wp-demo`)
assert_regex '^[0-9a-z\.-]\+$' "$BLDTYPE"

## CIVIVER: The version of CiviCRM to install, expressed as a branch or tag (e.g. `master`, `5.59`, `5.57.0`)
assert_regex '^[0-9a-z\.-]\+$' "$CIVIVER"

## CIVICOMMIT: Optional. Override the the `civicrm-core` version with specific commit. Can help with debugging/manual bisection.
assert_regex '^[0-9a-z\.-]*$' "$CIVICOMMIT"

## PATCH: Optional. URL of a pending pull-request in any `civicrm-*` repo (e.g. `https://github.com/civicrm/civicrm-packages/pull/1234`)
assert_regex '^\(\|https://github.com/civicrm/civicrm-[a-z]*/pull/[0-9]\+/*\)$' "$PATCH"

## SUITES: Space-limited list of test-suites (e.g. `phpunit-e2e phpunit-civi`)
assert_regex '^[ 0-9a-z\.-]\+$' "$SUITES"

#################################################
## Bootstrap

use_bknix_tmp

#################################################
## Local variables
GUARD=

## Build definition
## Note: Suffixes are unique within a period of 180 days.
BLDNAME="build-$EXECUTOR_NUMBER"
BLDDIR="$BKITBLD/$BLDNAME"
JUNITDIR="$WORKSPACE/junit"
[ -n "$PATCH" ] && PATCHARGS="--patch $PATCH" || PATCHARGS=""
EXITCODES=""

export TIME_FUNC="linear:500"

#################################################
## Report details about the test environment
set -x

civibuild env-info

## Reset (cleanup after previous tests)
[ -d "$WORKSPACE/junit" ] && rm -rf "$WORKSPACE/junit"
[ -d "$WORKSPACE/civibuild-html" ] && rm -rf "$WORKSPACE/civibuild-html"
if [ -d "$BKITBLD/$BLDNAME" ]; then
  echo y | civibuild destroy "$BLDNAME"
fi
mkdir "$WORKSPACE/junit"
mkdir "$WORKSPACE/civibuild-html"

## Download dependencies, apply, and perform fresh DB installation
$GUARD civibuild download "$BLDNAME" --type "$BLDTYPE" --civi-ver "$CIVIVER" $PATCHARGS

if [ -n "$CIVICOMMIT" ]; then
  case "$BLDTYPE" in
    drupal-clean)
      CIVICOMMIT_PATH=web/sites/all/modules/civicrm
      ;;
    *)
      echo "Cannot apply CIVICOMMIT=$CIVICOMMIT on BLDTYPE=$BLDTYPE"
      exit 1
      ;;
  esac

  $GUARD pushd "$BLDDIR/web/sites/all/modules/civicrm" >> /dev/null
    git checkout "$CIVICOMMIT"
  $GUARD popd >> /dev/null
fi

$GUARD civibuild install "$BLDNAME"

## Report details about this build of the application
civibuild show "$BLDNAME" \
  --html "$WORKSPACE/civibuild-html" \
  --last-scan "$WORKSPACE/last-scan.json" \
  --new-scan "$WORKSPACE/new-scan.json"
cp "$WORKSPACE/new-scan.json" "$WORKSPACE/last-scan.json"

#civi-test-run -b "$BLDNAME" -j "$JUNITDIR" --exclude-group ornery all
civi-test-run -b "$BLDNAME" -j "$JUNITDIR" $SUITES
